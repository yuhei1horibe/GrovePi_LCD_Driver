!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCH	Makefile	/^ARCH=arm$/;"	m
CHIP_I2C_DEVICE_NAME	sample.c	33;"	d	file:
CROSS_COMPILE	Makefile	/^CROSS_COMPILE=arm-linux-gnueabihf-$/;"	m
DEBUG	sample.c	18;"	d	file:
KERNDIR	Makefile	/^KERNDIR=\/home\/yuhei_mobile\/RaspberryPi\/linux$/;"	m
LCD_BACK_LIGHT	grove_lcd_driver.c	33;"	d	file:
LCD_TEXT	grove_lcd_driver.c	32;"	d	file:
PWD	Makefile	/^PWD=$(shell pwd)$/;"	m
REG_CHIP_DIR_PORTA	sample.c	86;"	d	file:
REG_CHIP_DIR_PORTB	sample.c	87;"	d	file:
REG_CHIP_PORTA_LIN	sample.c	89;"	d	file:
REG_CHIP_PORTA_LOUT	sample.c	91;"	d	file:
REG_CHIP_PORTB_LIN	sample.c	90;"	d	file:
REG_CHIP_PORTB_LOUT	sample.c	92;"	d	file:
REG_DISPLAY	grove_lcd_driver.c	37;"	d	file:
REG_LED_OUT	grove_lcd_driver.c	46;"	d	file:
REG_LETTERS	grove_lcd_driver.c	38;"	d	file:
REG_MODE0	grove_lcd_driver.c	41;"	d	file:
REG_MODE1	grove_lcd_driver.c	42;"	d	file:
REG_PWM_BLUE	grove_lcd_driver.c	43;"	d	file:
REG_PWM_GREEN	grove_lcd_driver.c	44;"	d	file:
REG_PWM_RED	grove_lcd_driver.c	45;"	d	file:
chip_data	sample.c	/^struct chip_data {$/;"	s	file:
chip_driver	sample.c	/^module_i2c_driver(chip_driver);$/;"	v
chip_driver	sample.c	/^static struct i2c_driver chip_driver = {$/;"	v	typeref:struct:i2c_driver	file:
chip_i2c_class	grove_lcd_driver.c	/^static struct class*		chip_i2c_class = NULL;$/;"	v	typeref:struct:class	file:
chip_i2c_class	sample.c	/^static struct class * chip_i2c_class = NULL;$/;"	v	typeref:struct:class	file:
chip_i2c_client	sample.c	/^static struct i2c_client * chip_i2c_client = NULL;$/;"	v	typeref:struct:i2c_client	file:
chip_i2c_close	sample.c	/^static int chip_i2c_close(struct inode * inode, struct file * fp)$/;"	f	file:
chip_i2c_detect	sample.c	/^static int chip_i2c_detect(struct i2c_client * client, $/;"	f	file:
chip_i2c_device	sample.c	/^static struct device * chip_i2c_device = NULL;$/;"	v	typeref:struct:device	file:
chip_i2c_fops	sample.c	/^static const struct file_operations chip_i2c_fops = {$/;"	v	typeref:struct:file_operations	file:
chip_i2c_id	sample.c	/^static const struct i2c_device_id chip_i2c_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
chip_i2c_major	sample.c	/^static int chip_i2c_major;$/;"	v	file:
chip_i2c_open	sample.c	/^static int chip_i2c_open(struct inode * inode, struct file *fp)$/;"	f	file:
chip_i2c_probe	sample.c	/^static int chip_i2c_probe(struct i2c_client *client,$/;"	f	file:
chip_i2c_remove	sample.c	/^static int chip_i2c_remove(struct i2c_client * client)$/;"	f	file:
chip_i2c_write	sample.c	/^static ssize_t chip_i2c_write(struct file * fp, const char __user * buf,$/;"	f	file:
chip_init_client	sample.c	/^static void chip_init_client(struct i2c_client *client)$/;"	f	file:
chip_read_value	sample.c	/^int chip_read_value(struct i2c_client *client, u8 reg)$/;"	f
chip_write_value	sample.c	/^int chip_write_value(struct i2c_client *client, u8 reg, u16 value)$/;"	f
get_chip_switch	sample.c	/^static ssize_t get_chip_switch(struct device *dev, $/;"	f	file:
grove_lcd_addr_list	grove_lcd_driver.c	/^static const unsigned short grove_lcd_addr_list[] = $/;"	v	file:
grove_lcd_detect	grove_lcd_driver.c	/^static int grove_lcd_detect(struct i2c_client* client,$/;"	f	file:
grove_lcd_dev_open	grove_lcd_driver.c	/^static int grove_lcd_dev_open(struct inode* inode, struct file* file)$/;"	f	file:
grove_lcd_dev_release	grove_lcd_driver.c	/^static int grove_lcd_dev_release(struct inode* inode, struct file* file)$/;"	f	file:
grove_lcd_device	grove_lcd_driver.c	/^struct grove_lcd_device$/;"	s	file:
grove_lcd_driver	grove_lcd_driver.c	/^module_i2c_driver(grove_lcd_driver);$/;"	v
grove_lcd_driver	grove_lcd_driver.c	/^static struct i2c_driver grove_lcd_driver = {$/;"	v	typeref:struct:i2c_driver	file:
grove_lcd_fops	grove_lcd_driver.c	/^static const struct file_operations	grove_lcd_fops	= {$/;"	v	typeref:struct:file_operations	file:
grove_lcd_id_tbl	grove_lcd_driver.c	/^static const struct i2c_device_id	grove_lcd_id_tbl[]	= $/;"	v	typeref:struct:i2c_device_id	file:
grove_lcd_major	grove_lcd_driver.c	/^	int					grove_lcd_major;$/;"	m	struct:grove_lcd_device	file:
grove_lcd_name	grove_lcd_driver.c	/^static const char	grove_lcd_name[]	= "grove_lcd";$/;"	v	file:
grove_lcd_probe	grove_lcd_driver.c	/^static int grove_lcd_probe(struct i2c_client *client,$/;"	f	file:
grove_lcd_remove	grove_lcd_driver.c	/^static int grove_lcd_remove(struct i2c_client * client)$/;"	f	file:
grove_lcd_write	grove_lcd_driver.c	/^static ssize_t grove_lcd_write(struct file* fp, const char* __user buff,$/;"	f	file:
i2c_client	grove_lcd_driver.c	/^static struct i2c_client*	i2c_client;$/;"	v	typeref:struct:i2c_client	file:
i2c_major	grove_lcd_driver.c	/^static int					i2c_major;	\/\/ Major number$/;"	v	file:
kind	sample.c	/^    int kind;$/;"	m	struct:chip_data	file:
led_last_updated	sample.c	/^ unsigned long led_last_updated; \/* In jiffies *\/$/;"	m	struct:chip_data	file:
normal_i2c	sample.c	/^static const unsigned short normal_i2c[] = { 0x20, 0x21, I2C_CLIENT_END };$/;"	v	file:
obj-m	Makefile	/^obj-m=grove_lcd_driver.o$/;"	m
set_chip_led	sample.c	/^static ssize_t set_chip_led(struct device *dev, $/;"	f	file:
switch_last_read	sample.c	/^    unsigned long switch_last_read; \/* In jiffies *\/$/;"	m	struct:chip_data	file:
update_lock	grove_lcd_driver.c	/^	struct mutex		update_lock;$/;"	m	struct:grove_lcd_device	typeref:struct:grove_lcd_device::mutex	file:
update_lock	sample.c	/^ struct mutex update_lock;$/;"	m	struct:chip_data	typeref:struct:chip_data::mutex	file:
